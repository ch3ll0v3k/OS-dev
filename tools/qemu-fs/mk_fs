#!/bin/bash

# =====================================================================
EXT_2_FS="rootfs.ext2"
MSODS_FS="rootfs.msdos"
FAT32_FS="rootfs.fat32"

MNT_P="./mnt/"


HDD_FORMAT="raw"; # raw: [default] | qcow2: |qcow: | cow: | vmdk: | cloop:
HDD_SIZE="32M"

qemu-img create -f $HDD_FORMAT $EXT_2_FS $HDD_SIZE
sudo mkfs.ext2  -L "root-fs" $EXT_2_FS



# ------------------------------------------------------------
# ./mk_fs >>>
# Formatting 'rootfs.ext2', fmt=raw size=33554432

# [sudo] password for ch3ll0v3k:
# mke2fs 1.42.5 (29-Jul-2012)
# rootfs.ext2 is not a block special device.
# Proceed anyway? (y,n) y
# Discarding device blocks: done
# Filesystem label=root-fs
# OS type: Linux
# Block size=1024 (log=0)
# Fragment size=1024 (log=0)
# Stride=0 blocks, Stripe width=0 blocks
# 8192 inodes, 32768 blocks
# 1638 blocks (5.00%) reserved for the super user
# First data block=1
# Maximum filesystem blocks=33554432
# 4 block groups
# 8192 blocks per group, 8192 fragments per group
# 2048 inodes per group
# Superblock backups stored on blocks: 
#     8193, 24577


# ------------------------------------------------------------
# sudo fdisk -l ./rootfs.ext2 

# Disk ./rootfs.ext2: 33 MB, 33554432 bytes
# 255 heads, 63 sectors/track, 4 cylinders, total 65536 sectors
# Units = sectors of 1 * 512 = 512 bytes
# Sector size (logical/physical): 512 bytes / 512 bytes
# I/O size (minimum/optimal): 512 bytes / 512 bytes
# Disk identifier: 0x00000000

# Disk ./rootfs.ext2 doesn't contain a valid partition table

# ------------------------------------------------------------



exit;


# qemu-img create -f $HDD_FORMAT $MSODS_FS $HDD_SIZE
# mkfs.msdos -n "MSDOS_FS" $MSODS_FS

#qemu-img create -f $HDD_FORMAT $FAT32_FS $HDD_SIZE
#sudo mkdosfs -n vfat_name -s 8 ./rootfs.fat32
#mkfs.msdos -n "FAT32_FS" $FAT32_FS

# sudo umount /dev/loop*




exit;

echo -e "dcfldd if=../../osdev/os.v3/os.iso of=$EXT_2_FS bs=512k\n"
dcfldd if=../../osdev/os.v3/os.iso of=$EXT_2_FS bs=512k

echo -e "dcfldd if=../../osdev/os.v3/os.iso of=$MSODS_FS bs=512k\n"
dcfldd if=../../osdev/os.v3/os.iso of=$MSODS_FS bs=512k


exit;
# =====================================================================
MNT_PARAMS=" -t ext2 -o loop,rw "
MNT_PARAMS=" -o loop,rw "

echo -e "----------------------------------------------" 
echo -e "processing: $MSODS_FS\n"

echo -e "mount $MSODS_FS $MNT_P"
sudo mount $MNT_PARAMS $MSODS_FS $MNT_P
echo -e "cp -r .../os/* $MNT_P"
sudo cp -r /m-sys/prog-proj/OS/edu/osdev/os.v3/os/* $MNT_P
sync
echo -e "umount $MNT_P"
sudo umount $MNT_P

echo -e "----------------------------------------------" 
echo -e "processing: $EXT_2_FS\n"

echo -e "mount $EXT_2_FS $MNT_P"
sudo mount $MNT_PARAMS $EXT_2_FS $MNT_P
echo -e "cp -r .../os/* $MNT_P"
sudo cp -r /m-sys/prog-proj/OS/edu/osdev/os.v3/os/* $MNT_P
sync
echo -e "umount $MNT_P"
sudo umount $MNT_P

echo -e "\nALL-DONE\n"

# =====================================================================
# dcfldd if=../../osdev/os.v3/os.iso of=./rootfs.ext2 seek=0 bs=512k
# qemu -m 256 -hda ./rootfs.ext2 -boot d

# qemu -m 256 -cdrom ../../osdev/os.v3/os.iso -boot d

# qemu -m 256 -kernel ../../osdev/os.v3/bin/kernel.bin
# qemu -m 256 -kernel ../../osdev/os.v3/bin/kernel.bin -boot d

# qemu -m 256 -hda winxp.img -cdrom winxpsp2.iso -boot d
# qemu -m 256 -hda winxp.img -cdrom /dev/cdrom -boot d


