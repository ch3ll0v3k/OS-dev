#!/bin/bash
LL="----------------------------------------------------------\n"
# =====================================================================
# os/boot/grub/grub.cfg
ROOT="./os"

P0=$1; P1=$2; P2=$3

if [[ $P0 == "" && $P1 == "" && $P2 == "" ]]; then
    echo -e "./build [ all | 1 1 1 ]";

fi

if [[ $P0 == "all" ]]; then
    P0=1; P1=1; P2=0
fi

# =====================================================================
if [[ $P0 == 1 ]]; then
    echo -e "$LL[+] clean\n"
    rm -f ./*.o 
    rm -f ./*.bin 
    rm -f ./*.iso

fi

# =====================================================================
GCC_PARAMD="-m32 -nostdlib -fno-builtin -fno-exceptions -fno-leading-underscore"
GCC_PARAMD_2="-ffreestanding -O2 -std=gnu99 -ffreestanding -O2 -Wall -Wextra"

LD_PARAMD="-T linker.ld -m elf_i386 -O2 -nostdlib"

# SCREEN CANT INIT PROPERLY with (-shared and -ffreestanding)
#LD_PARAMD="-T linker.ld -shared -m elf_i386 -ffreestanding -O2 -nostdlib"

sync

if [[ $P1 == 1 ]]; then
    echo -e "$LL[+] nasm -f elf32 kernel.asm -o kernel_asm.o\n"
    nasm -f elf32 kernel.asm -o kernel_asm.o

    echo -e "$LL[+] gcc $GCC_PARAMD -c kernel.c -o kernel_c.o $GCC_PARAMD_2\n"
    gcc $GCC_PARAMD -c kernel.c -o kernel_c.o $GCC_PARAMD_2

    echo -e "$LL[+] gcc $GCC_PARAMD -c kernel_terminal.c -o kernel_terminal.o $GCC_PARAMD_2\n"
    gcc $GCC_PARAMD -c kernel_terminal.c -o kernel_terminal.o $GCC_PARAMD_2



    echo -e "$LL[+] ld $LD_PARAMD -o kernel.bin kernel_asm.o kernel_c.o\n"
    ld $LD_PARAMD -o kernel.bin kernel_asm.o kernel_terminal.o kernel_c.o

fi

# =====================================================================
if [[ $P2 == 1 ]]; then
    echo -e "$LL[+] cp kernel.bin $ROOT/boot/\n"
    cp kernel.bin "$ROOT/boot/"

    echo -e "\n"
    echo -e "$LL[+] grub-mkrescue --modules=/usr/lib/grub/i386-pc/ -o os.iso $ROOT\n"
    grub-mkrescue --modules=/usr/lib/grub/i386-pc/ -o os.iso $ROOT
    #grub-mkrescue -o os.iso os/

fi
